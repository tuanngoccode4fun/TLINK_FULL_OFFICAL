<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_search.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        5wAAAOcB8BtYtQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAShSURBVFhHzZfp
        U1NXGIf9b/oP9ItaR6e1dmqXoZVFy4AFIi2r7CXRsMgSFmsEUbZaC7LIMtMSQgiLVSiEsESWbCVJAYEs
        ZCPglH6QmV/vOSkXQsJ16CDth2cmOcv7Pueec8879wQvu1zI45dtMeCY2SK5T9AfgQccB1tEgP4ZULzA
        yprrSFAblxArKINCmoKc0gJElIgR9KQWPKatIykRZekCVoIVaJX+itFp3ZHQNzJFY7Y08JGaJ0JU/m2E
        1lbRtsrULPAz8/0F/itYgfgcMRLzKo4FkstPYGhyDg7Pq2OB5Pr/CkTKl/FOo5FytmOBnWQpvgFzzCWK
        hZ/Atk/ZVnF+pOFAqg0T7NgdOAUk807Uz6xRmjV2dtLa6DDWZBIvzwfp66bSmTBvs6F1Ye5Axq3LbIwd
        OAW4WLY5UVzTjODEHJwOTcCpkHi8F5aIsOv5ED/qhNmxHnDefjgFbO4NWJ0eLy4PO6l/9AU+/0ZAk354
        NR3XhHcguNsA3o3bOB+ZRttDk/OgUGngcLp3ce/G2IFToKyule3MEFXTNgVzuZAVEz6Jy0XwrYcIKfiR
        JTj/BwgqG2n/ubAETESFsefF1vbYJzmBU2BEpYX0mZJCrmfyWMnKSPD8hm5UyFUBkc3bUSf9jT6JyDg+
        LNIuel7sav+t5RTYT82TbhpUeL8J/SbXG0kR1dDx7b3PA8YjcAuse+Bcd7OkFFbSgN1zyzSBzOhEzz/0
        GncT95mclPYxHR1/U/wQ9vVNv+QEToG/TGXY1kSzBMXE4bPoODzVz9FE77aa2HsiRLpE2yRqM9rGjV6U
        Bpz7KhlBzIHV6oxYWrEeTsBjm8KGeZDiWR3E2SuJCE8RYMDgfQIlSitujVkoVSobbetl9l+qtbCQt+VS
        vBArFjusDuZNOIzAfiLSi+iK+owOmuxN9GjN9MDGMQUnUDwCp8CKaxOLjg3KknMTuRWP6J42DYyjX2f2
        oreyCeXMvksMayxVkmd0fHFdC1663LAwZ+pQAvtrwfCUmq4oJCIJ0tQM9KRnQlYgYgUe65ZxZuAXL7IO
        nI5KwanLifigr/7f1QIZc7Ib1HZKu85B20qYy4ms6npWESQ/90M+MMYKdBlsKJ/RoXh0CqF8ER337ff3
        0bmooZBitTc5gVMgEGbmIEVnl9LgF2O+w902OdpGNejRWdA6osad5h5c+DqD9hM+js5kLrIxmAK8AQRO
        gVX3Ot07wrJ79wSTQiT+qRNnmOKzk2gvF5j6UN0iQVrhPbwfnoyTX0Shu6MUfy7UM/N97wNOgbQZOVvL
        L493sJOKHjTRcVczihGckMOsMgsfMav+lJeNL+NvQvuHt+zqC4U4efEKGvPCsa323iVbi7VM364Ep8Cw
        eRFdL/WUvhUDO0k5+zsGx6YPhFRPMs6umoSiQ8QkjvG50LYWSGHzSnAKHAUe2yS2tbE+Ansl3roAwWOb
        OEDiAZNr1l9gRKWGxc5cHEeIc1WB1z4SMXg1nQOjss5fQD6khGpWf+QY5mR4rblGBVzj2XAp0jE4NOQj
        8NY/TsX3cjHXHQt9dwyShKK9fczH6TF9nheV5fol52WXC/8Gieo/oPxhLG8AAAAASUVORK5CYII=
</value>
  </data>
</root>